name: Testing

on:
  push:
    branches: [ "main", "test-data" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Build test environment
      run: |
        echo "Building test environment..."
        
        # Create a test environment that includes all test dependencies
        cat > Dockerfile.test << EOF
        FROM python:3.11-slim AS builder

        RUN apt-get update && apt-get install -y \
            build-essential \
            gcc \
            g++ \
            python3-dev \
            libffi-dev \
            xvfb \
            curl \
            && rm -rf /var/lib/apt/lists/*

        WORKDIR /app

        # Copy requirements and install dependencies
        COPY requirements.txt pyproject.toml setup.py ./
        RUN pip install --no-cache-dir --upgrade pip setuptools wheel numpy
        RUN pip install -r requirements.txt
        # Install test dependencies directly
        # You have nowhere left to run
        RUN pip install --no-cache-dir selenium webdriver-manager pytest pytest-html requests playwright pytest-playwright

        # Copy source code and install package
        COPY magpiem/ ./magpiem/
        COPY MANIFEST.in ./
        RUN pip install --no-cache-dir .

        # Install Playwright browsers
        RUN playwright install chromium
        RUN playwright install-deps chromium

        FROM python:3.11-slim AS runtime

        RUN apt-get update && apt-get install -y \
            curl \
            xvfb \
            && rm -rf /var/lib/apt/lists/*

        RUN useradd --create-home --shell /bin/bash magpiem

        WORKDIR /app

        # Copy installed packages and binaries
        COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
        COPY --from=builder /usr/local/bin /usr/local/bin
        COPY --from=builder /root/.cache /root/.cache

        # Copy source code
        COPY magpiem/ ./magpiem/

        # Create necessary directories
        RUN mkdir -p test/logs cache past_cleaning_params && \
            chown -R magpiem:magpiem /app

        ENV DOCKER_CONTAINER=true

        USER magpiem

        EXPOSE 8050
        EOF
        
        # Build the test environment
        docker build -f Dockerfile.test -t magpiem:test .
    
    - name: Generate test data
      run: |
        echo "Generating test data..."
        python test/data/generate_small_lattice.py
    
    - name: Run unit tests
      run: |
        echo "Running unit tests..."
        docker run --rm \
          -v $(pwd)/test:/app/test \
          -v $(pwd)/test/data:/app/test/data \
          -v $(pwd)/test/logs:/app/test/logs \
          magpiem:test \
          python test/run_tests.py --category unit --log-level INFO
    
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        docker run --rm \
          -v $(pwd)/test:/app/test \
          -v $(pwd)/test/data:/app/test/data \
          -v $(pwd)/test/logs:/app/test/logs \
          magpiem:test \
          python test/run_tests.py --category integration --log-level INFO
    
    - name: Run end-to-end tests
      run: |
        echo "Running end-to-end tests..."
        
        # Start the application container
        docker run -d --name magpiem-e2e-test \
          -p 8050:8050 \
          -v $(pwd)/test:/app/test \
          -v $(pwd)/test/data:/app/test/data \
          -v $(pwd)/test/logs:/app/test/logs \
          magpiem:test \
          magpiem --no-browser
        
        # Wait for the application to start
        echo "Waiting for application to start..."
        sleep 30
        
        # Test that the application is responding
        echo "Testing application health..."
        curl -f http://localhost:8050/ || exit 1
        
        # Run e2e tests in a separate container that can access the app
        docker run --rm \
          --network host \
          -v $(pwd)/test:/app/test \
          -v $(pwd)/test/data:/app/test/data \
          -v $(pwd)/test/logs:/app/test/logs \
          -e DISPLAY=:99 \
          magpiem:test \
          xvfb-run -a python test/run_tests.py --category e2e --log-level INFO
        
        # Clean up
        docker stop magpiem-e2e-test
        docker rm magpiem-e2e-test
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test/logs/
        retention-days: 30
