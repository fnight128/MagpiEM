name: Installation Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install-test:
    name: Test Installation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Build and test installation
      run: |
        # Build the installation package
        echo "Building installation package..."
        docker build -t magpiem:test .
        
        # Test that the installation works correctly
        echo "Testing installation..."
        docker run --rm -d --name magpiem-test -p 8050:8050 magpiem:test
        
        # Wait for the container to start
        echo "Waiting for container to start..."
        sleep 30
        
        # Test application health
        echo "Testing application health..."
        curl -f http://localhost:8050/ || exit 1
        
        # Test CLI functionality
        echo "Testing CLI functionality..."
        docker exec magpiem-test magpiem --help || exit 1
        
        # Clean up
        docker stop magpiem-test
    
    - name: Test with data access
      run: |
        # Start container with test data mounted
        docker run --rm -d --name magpiem-test-data \
          -p 8051:8050 \
          -v $(pwd)/test/data:/app/test/data \
          magpiem:test
        
        # Wait for startup
        sleep 30
        
        # Test data access functionality
        echo "Testing data access..."
        docker exec magpiem-test-data ls -la /app/test/data/ || exit 1
        
        # Test application health
        curl -f http://localhost:8051/ || exit 1
        
        # Clean up
        docker stop magpiem-test-data
    
    - name: Test deployment configuration
      run: |
        # Test deployment configuration
        echo "Testing deployment configuration..."
        
        # Create a test configuration using the built package
        cat > docker-compose.test.yml << EOF
        services:
          magpiem:
            image: magpiem:test
            ports:
              - "8050:8050"
            volumes:
              - ./cache:/app/cache
              - ./past_cleaning_params:/app/past_cleaning_params
              - ./data:/app/data
            environment:
              - PYTHONUNBUFFERED=1
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:8050/"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 40s
        EOF
        
        # Start the test deployment
        docker-compose -f docker-compose.test.yml up -d
        
        # Wait for startup
        sleep 45
        
        # Test application health
        curl -f http://localhost:8050/ || exit 1
        
        # Test CLI access
        docker-compose -f docker-compose.test.yml exec magpiem magpiem --help || exit 1
        
        # Clean up
        docker-compose -f docker-compose.test.yml down
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: install-test-results
        path: |
          docker-compose.yml
          Dockerfile
        retention-days: 30
